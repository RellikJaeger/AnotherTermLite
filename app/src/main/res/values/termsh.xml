<?xml version="1.0" encoding="utf-8"?>
<resources xmlns:tools="http://schemas.android.com/tools">
    <string name="desc_termsh_help" tools:ignore="TypographyDashes,TypographyEllipsis"><![CDATA[
\
    USAGE:

    $TERMSH [-r|--raw] <command> [<arg>]...

      -r|--raw - raw mode as set by cfmakeraw().
        (Beware, Ctrl-C etc. are not captured by the terminal in this mode.)


    Commands:

    * help

        This message.


    * notify [-i|--id <id>] [<message>]
      notify -r|--remove -i|--id <id>

        Display notification,
        stdin will be used if no message argument provided.

        -i|--id <id> - notification id

        -r|--remove - remove notification by id


    * [view|edit] [-n|--notify] [-m|--meta <meta>] [-t|--title <title>] [-u|--uri] <file|uri>

        Open for view / edit with appropriate temporary access rights.

        -u|--uri - use uri instead of file


    * send [-n|--notify] [-m|--meta <meta>] [-t|--title <title>] [-u|--uri] [<file|uri>]

        Send (android.intent.action.SEND). If no `file\' argument is specified, stdin is used.

        -u|--uri - use uri instead of file


    * get [-n|--notify] [-m|--meta <meta>] [-t|--title <title>]

        Show document picker dialog and URI to stdout.

        Example: $TERMSH cat `$TERMSH get` > some_file


    * cat <URI>

        Copy specified Android URI content to the stdout.

        Example: $TERMSH cat content://$APP_ID.linksprovider/html/some_url_to_be_wrapped_into_html


    * serial [<baudrate>[/<databits>[/<stopbits>[/<parity>[/<flowcontrol>]]]]]

        Connect to an USB serial dongle and use stdin / stdout.

        Default: 9600/8/1/none/off

        databits - 8, 7, 6, 5

        stopbits - 1, 1.5, 2

        parity - none, even, odd, mark, space

        flowcontrol - off, xon_xoff, rts_cts, dsr_dtr
\
\
]]></string>
</resources>
